from django.db import models

from edc.subject.appointment.models import Appointment
from edc.subject.entry.models import Entry

from ..managers import NaturalKeyEntryMetaDataManager
from .base_entry_meta_data import BaseEntryMetaData


class ScheduledEntryMetaData(BaseEntryMetaData):
    """Subject-specific list of required and scheduled entry as per normal visit schedule."""

    appointment = models.ForeignKey(Appointment, related_name='+')

    entry = models.ForeignKey(Entry)

    objects = NaturalKeyEntryMetaDataManager()

    def __unicode__(self):
        return unicode(self.current_entry_title) or u''

#     def is_serialized(self):
#         """Don't serialize these records as they clutter up the outgoing box and can be regenerated by the consumer.
# 
#         See example in registered_subject_dashboard.py"""
#         return False

    def natural_key(self):
        return self.appointment.natural_key() + self.entry.natural_key()

    def deserialize_get_missing_fk(self, attrname):
        retval = None
        if attrname == 'registered_subject':
            return self.registered_subject
        if attrname == 'appointment':
            return self.appointment
        return retval

    class Meta:
        app_label = 'entry_meta_data'
        verbose_name = "Scheduled Entry Metadata"
        ordering = ['registered_subject', 'entry', 'appointment']
        unique_together = ['registered_subject', 'entry', 'appointment']
